#include "fni_ext.h"
CF_BEGIN

fr_Obj sys_Obj_trap(fr_Env env, fr_Obj self, fr_Obj name, fr_Obj args);
fr_Bool sys_Obj_isImmutable(fr_Env env, fr_Obj self);
fr_Int sys_Int_fromStr(fr_Env env, fr_Obj s, fr_Int radix, fr_Bool checked);
fr_Int sys_Int_random(fr_Env env, fr_Obj r);
void sys_Int_privateMake_val(fr_Env env, fr_Int self);
fr_Bool sys_Int_equals_val(fr_Env env, fr_Int self, fr_Obj obj);
fr_Int sys_Int_compare_val(fr_Env env, fr_Int self, fr_Obj obj);
fr_Int sys_Int_negate_val(fr_Env env, fr_Int self);
fr_Int sys_Int_increment_val(fr_Env env, fr_Int self);
fr_Int sys_Int_decrement_val(fr_Env env, fr_Int self);
fr_Int sys_Int_mult_val(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_multFloat_val(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_div_val(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_divFloat_val(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_mod_val(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_modFloat_val(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_plus_val(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_plusFloat_val(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_minus_val(fr_Env env, fr_Int self, fr_Int b);
fr_Float sys_Int_minusFloat_val(fr_Env env, fr_Int self, fr_Float b);
fr_Int sys_Int_not__val(fr_Env env, fr_Int self);
fr_Int sys_Int_and__val(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_or__val(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_xor__val(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_shiftl_val(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_shiftr_val(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_shifta_val(fr_Env env, fr_Int self, fr_Int b);
fr_Int sys_Int_pow_val(fr_Env env, fr_Int self, fr_Int pow);
fr_Obj sys_Int_toStr_val(fr_Env env, fr_Int self);
fr_Obj sys_Int_toHex_val(fr_Env env, fr_Int self, fr_Int width);
fr_Obj sys_Int_toRadix_val(fr_Env env, fr_Int self, fr_Int radix, fr_Int width);
fr_Obj sys_Int_toChar_val(fr_Env env, fr_Int self);
fr_Obj sys_Int_toCode_val(fr_Env env, fr_Int self, fr_Int base);
fr_Float sys_Int_toFloat_val(fr_Env env, fr_Int self);
fr_Obj sys_Func_call(fr_Env env, fr_Obj self, fr_Obj a, fr_Obj b, fr_Obj c, fr_Obj d, fr_Obj e, fr_Obj f, fr_Obj g, fr_Obj h);
fr_Obj sys_BindFunc_call(fr_Env env, fr_Obj self, fr_Obj a, fr_Obj b, fr_Obj c, fr_Obj d, fr_Obj e, fr_Obj f, fr_Obj g, fr_Obj h);
fr_Obj sys_Str_format(fr_Env env, fr_Obj format, fr_Obj args);
fr_Bool sys_Bool_equals_val(fr_Env env, fr_Bool self, fr_Obj obj);
fr_Bool sys_Bool_not__val(fr_Env env, fr_Bool self);
fr_Bool sys_Bool_and__val(fr_Env env, fr_Bool self, fr_Bool b);
fr_Bool sys_Bool_or__val(fr_Env env, fr_Bool self, fr_Bool b);
fr_Bool sys_Bool_xor__val(fr_Env env, fr_Bool self, fr_Bool b);
void sys_Ptr_make_val(fr_Env env, fr_Ptr self);
fr_Ptr sys_Ptr_stackAlloc(fr_Env env, fr_Int size);
fr_Obj sys_Ptr_load_val(fr_Env env, fr_Ptr self);
void sys_Ptr_store_val(fr_Env env, fr_Ptr self, fr_Obj v);
fr_Ptr sys_Ptr_plus_val(fr_Env env, fr_Ptr self, fr_Int b);
void sys_Ptr_set_val(fr_Env env, fr_Ptr self, fr_Int index, fr_Obj item);
fr_Obj sys_Ptr_get_val(fr_Env env, fr_Ptr self, fr_Int index);
void sys_Array_make(fr_Env env, fr_Obj self, fr_Int size);
fr_Int sys_Array_size(fr_Env env, fr_Obj self);
fr_Obj sys_Array_get(fr_Env env, fr_Obj self, fr_Int pos);
void sys_Array_set(fr_Env env, fr_Obj self, fr_Int pos, fr_Obj val);
fr_Obj sys_Array_realloc(fr_Env env, fr_Obj array, fr_Int newSize);
void sys_Array_arraycopy(fr_Env env, fr_Obj src, fr_Int srcOffset, fr_Obj dest, fr_Int destOffset, fr_Int length);
void sys_Array_fill(fr_Env env, fr_Obj array, fr_Obj val, fr_Int times);
void sys_Array_finalize(fr_Env env, fr_Obj self);
fr_Int sys_NativeC_toId(fr_Env env, fr_Obj self);
fr_Obj sys_NativeC_typeName(fr_Env env, fr_Obj self);
void sys_NativeC_print(fr_Env env, fr_Obj utf8);
void sys_NativeC_printErr(fr_Env env, fr_Obj utf8);
fr_Obj sys_NativeC_stackTrace(fr_Env env);
fr_Float sys_Float_makeBits(fr_Env env, fr_Int bits);
fr_Float sys_Float_makeBits32(fr_Env env, fr_Int bits);
fr_Float sys_Float_fromStr(fr_Env env, fr_Obj s, fr_Bool checked);
fr_Float sys_Float_random(fr_Env env);
fr_Bool sys_Float_equals_val(fr_Env env, fr_Float self, fr_Obj obj);
fr_Bool sys_Float_isNaN_val(fr_Env env, fr_Float self);
fr_Float sys_Float_negate_val(fr_Env env, fr_Float self);
fr_Float sys_Float_mult_val(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_multInt_val(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_div_val(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_divInt_val(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_mod_val(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_modInt_val(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_plus_val(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_plusInt_val(fr_Env env, fr_Float self, fr_Int b);
fr_Float sys_Float_minus_val(fr_Env env, fr_Float self, fr_Float b);
fr_Float sys_Float_minusInt_val(fr_Env env, fr_Float self, fr_Int b);
fr_Int sys_Float_bits_val(fr_Env env, fr_Float self);
fr_Int sys_Float_bits32_val(fr_Env env, fr_Float self);
fr_Obj sys_Float_toStr_val(fr_Env env, fr_Float self);
fr_Int sys_Float_toInt_val(fr_Env env, fr_Float self);
fr_Obj sys_Float_toLocale_val(fr_Env env, fr_Float self, fr_Obj pattern);
fr_Obj sys_Enum_doFromStr(fr_Env env, fr_Obj type, fr_Obj name, fr_Bool checked);

CF_END
